// http://llvm.org/docs/LangRef.html#trunc-to-instruction
// keywords: conversion; unary; instruction

.type TruncInstruction = Instruction
.decl trunc_instruction(instr:TruncInstruction)

instruction(v) :- trunc_instruction(v).

.decl trunc_instruction_from_operand(instr:TruncInstruction, val:Operand)
.decl trunc_instruction_to_type(instr:TruncInstruction, type:Type)


// Helper predicate

.decl trunc_instruction_from_type(instr:TruncInstruction, type:Type)

trunc_instruction_from_type(Instr, Type) :-
   trunc_instruction_from_operand(Instr, Operand),
   operand_has_type(Operand, Type).


//------------------------------------------------------------------------------
// [Constraints]
//
// 1) The ‘trunc‘ instruction takes:
//      (i)  a value to trunc,
//      (ii) and a type to trunc it to.
//
// 2) Both source and destination types must be:
//      (i)  integers or
//      (ii) vectors of the same number of integers.
//
// 3) The source type must be larger than the destination type.
//------------------------------------------------------------------------------

schema_invalid_instruction(Instr, __FILE__, __LINE__) :-
   schema_sanity(),
   trunc_instruction(Instr),
   !trunc_instruction_from_operand(Instr, _).

schema_invalid_instruction(Instr, __FILE__, __LINE__) :-
   schema_sanity(),
   trunc_instruction(Instr),
   !trunc_instruction_to_type(Instr, _).

schema_invalid_instruction(Instr, __FILE__, __LINE__) :-
   schema_sanity(),
   trunc_instruction(Instr),
   trunc_instruction_to_type(Instr, Type),
   !instruction_returns_type(Instr, Type).

schema_invalid_instruction(Instr, __FILE__, __LINE__) :-
   schema_sanity(),
   trunc_instruction(Instr),
   trunc_instruction_from_type(Instr, Type),
   !integer_type(Type),
   !integer_vector_type(Type).

schema_invalid_instruction(Instr, __FILE__, __LINE__) :-
   schema_sanity(),
   trunc_instruction(Instr),
   trunc_instruction_to_type(Instr, Type),
   !integer_type(Type),
   !integer_vector_type(Type).

schema_invalid_instruction(Instr, __FILE__, __LINE__) :-
   schema_sanity(),
   trunc_instruction(Instr),
   trunc_instruction_from_type(Instr, FromType),
   trunc_instruction_to_type(Instr, ToType),
   !vector_compatible_types(FromType, ToType).
