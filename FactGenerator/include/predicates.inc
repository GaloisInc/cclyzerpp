// Default to empty definitions
#ifndef GROUP_BEGIN
#define GROUP_BEGIN(group)
#endif
#ifndef GROUP_END
#define GROUP_BEGIN(group)
#endif
#ifndef PREDICATE
#define PREDICATE(name)
#endif

GROUP_BEGIN(basic_block)
PREDICATE(predecessor)
GROUP_END(basic_block)

GROUP_BEGIN(global_var)
PREDICATE(id)
PREDICATE(name)
PREDICATE(unmangl_name)
PREDICATE(type)
PREDICATE(initializer)
PREDICATE(section)
PREDICATE(align)
PREDICATE(flag)
PREDICATE(linkage)
PREDICATE(visibility)
PREDICATE(threadlocal_mode)
GROUP_END(global_var)

GROUP_BEGIN(alias)
PREDICATE(id)
PREDICATE(name)
PREDICATE(type)
PREDICATE(linkage)
PREDICATE(visibility)
PREDICATE(aliasee)
GROUP_END(alias)

GROUP_BEGIN(function)
PREDICATE(id_defn)
PREDICATE(id_decl)
PREDICATE(unnamed_addr)
PREDICATE(linkage)
PREDICATE(visibility)
PREDICATE(calling_conv)
PREDICATE(section)
PREDICATE(alignment)
PREDICATE(fn_attr)
PREDICATE(gc)
PREDICATE(pers_fn)
PREDICATE(name)
PREDICATE(type)
PREDICATE(signature)
PREDICATE(param)
PREDICATE(ret_attr)
PREDICATE(param_attr)
GROUP_END(function)

GROUP_BEGIN(instruction)
PREDICATE(to)
PREDICATE(flag)
PREDICATE(next)
PREDICATE(bb_entry)
PREDICATE(function)
PREDICATE(unreachable)
PREDICATE(pos)
PREDICATE(location)
GROUP_END(instruction)

GROUP_BEGIN(add)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(add)

GROUP_BEGIN(fadd)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(fadd)

GROUP_BEGIN(sub)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(sub)

GROUP_BEGIN(fsub)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(fsub)

GROUP_BEGIN(mul)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(mul)

GROUP_BEGIN(fmul)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(fmul)

GROUP_BEGIN(udiv)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(udiv)

GROUP_BEGIN(fdiv)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(fdiv)

GROUP_BEGIN(sdiv)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(sdiv)

GROUP_BEGIN(urem)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(urem)

GROUP_BEGIN(srem)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(srem)

GROUP_BEGIN(frem)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(frem)

// Bitwise Binary Instructions

GROUP_BEGIN(shl)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(shl)

GROUP_BEGIN(lshr)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(lshr)

GROUP_BEGIN(ashr)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(ashr)

GROUP_BEGIN(and_)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(and_)

GROUP_BEGIN(or_)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(or_)

GROUP_BEGIN(xor_)
PREDICATE(instr)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(xor_)

// Terminator Instructions

GROUP_BEGIN(ret)
PREDICATE(instr)
PREDICATE(instr_void)
PREDICATE(operand)
GROUP_END(ret)

GROUP_BEGIN(br)
PREDICATE(instr)
PREDICATE(instr_cond)
PREDICATE(instr_uncond)
PREDICATE(condition)
PREDICATE(cond_iftrue)
PREDICATE(cond_iffalse)
PREDICATE(uncond_dest)
GROUP_END(br)

GROUP_BEGIN(switch_)
PREDICATE(instr)
PREDICATE(operand)
PREDICATE(default_label)
PREDICATE(case_value)
PREDICATE(case_label)
PREDICATE(ncases)
GROUP_END(switch_)

GROUP_BEGIN(indirectbr)
PREDICATE(instr)
PREDICATE(address)
PREDICATE(label)
PREDICATE(nlabels)
GROUP_END(indirectbr)

GROUP_BEGIN(resume)
PREDICATE(instr)
PREDICATE(operand)
GROUP_END(resume)

GROUP_BEGIN(invoke)
PREDICATE(instr)
PREDICATE(instr_direct)
PREDICATE(instr_indirect)
PREDICATE(function)
PREDICATE(arg)
PREDICATE(calling_conv)
PREDICATE(ret_attr)
PREDICATE(param_attr)
PREDICATE(fn_attr)
PREDICATE(normal_label)
PREDICATE(exc_label)
GROUP_END(invoke)

// Vector Operations

GROUP_BEGIN(extract_element)
PREDICATE(instr)
PREDICATE(base)
PREDICATE(index)
GROUP_END(extract_element)

GROUP_BEGIN(insert_element)
PREDICATE(instr)
PREDICATE(base)
PREDICATE(index)
PREDICATE(value)
GROUP_END(insert_element)

GROUP_BEGIN(shuffle_vector)
PREDICATE(instr)
PREDICATE(first_vector)
PREDICATE(second_vector)
PREDICATE(mask)
GROUP_END(shuffle_vector)

// Aggregate Operations

GROUP_BEGIN(extract_value)
PREDICATE(instr)
PREDICATE(base)
PREDICATE(index)
PREDICATE(nindices)
GROUP_END(extract_value)

GROUP_BEGIN(insert_value)
PREDICATE(instr)
PREDICATE(base)
PREDICATE(value)
PREDICATE(index)
PREDICATE(nindices)
GROUP_END(insert_value)

// Memory Operations

GROUP_BEGIN(alloca)
PREDICATE(instr)
PREDICATE(size)
PREDICATE(alignment)
PREDICATE(type)
GROUP_END(alloca)

GROUP_BEGIN(load)
PREDICATE(instr)
PREDICATE(alignment)
PREDICATE(ordering)
PREDICATE(address)
PREDICATE(isvolatile)
GROUP_END(load)

GROUP_BEGIN(store)
PREDICATE(instr)
PREDICATE(alignment)
PREDICATE(ordering)
PREDICATE(value)
PREDICATE(address)
PREDICATE(isvolatile)
GROUP_END(store)

GROUP_BEGIN(fence)
PREDICATE(instr)
PREDICATE(ordering)
GROUP_END(fence)

GROUP_BEGIN(atomicrmw)
PREDICATE(instr)
PREDICATE(ordering)
PREDICATE(operation)
PREDICATE(address)
PREDICATE(value)
PREDICATE(isvolatile)
GROUP_END(atomicrmw)

GROUP_BEGIN(cmpxchg)
PREDICATE(instr)
PREDICATE(address)
PREDICATE(cmp_value)
PREDICATE(new_value)
PREDICATE(ordering)
PREDICATE(type)
PREDICATE(isvolatile)
GROUP_END(cmpxchg)

GROUP_BEGIN(gep)
PREDICATE(instr)
PREDICATE(base)
PREDICATE(index)
PREDICATE(nindices)
PREDICATE(inbounds)
GROUP_END(gep)

// Conversion Operations

GROUP_BEGIN(trunc)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(trunc)

GROUP_BEGIN(zext)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(zext)

GROUP_BEGIN(sext)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(sext)

GROUP_BEGIN(fptrunc)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(fptrunc)

GROUP_BEGIN(fpext)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(fpext)

GROUP_BEGIN(fptoui)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(fptoui)

GROUP_BEGIN(fptosi)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(fptosi)

GROUP_BEGIN(uitofp)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(uitofp)

GROUP_BEGIN(sitofp)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(sitofp)

GROUP_BEGIN(ptrtoint)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(ptrtoint)

GROUP_BEGIN(inttoptr)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(inttoptr)

GROUP_BEGIN(bitcast)
PREDICATE(instr)
PREDICATE(from_operand)
PREDICATE(to_type)
GROUP_END(bitcast)

// Other Operations

GROUP_BEGIN(icmp)
PREDICATE(instr)
PREDICATE(condition)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(icmp)

GROUP_BEGIN(fcmp)
PREDICATE(instr)
PREDICATE(condition)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(fcmp)

GROUP_BEGIN(phi)
PREDICATE(instr)
PREDICATE(type)
PREDICATE(pair_value)
PREDICATE(pair_label)
PREDICATE(npairs)
GROUP_END(phi)

GROUP_BEGIN(select)
PREDICATE(instr)
PREDICATE(condition)
PREDICATE(first_operand)
PREDICATE(second_operand)
GROUP_END(select)

GROUP_BEGIN(va_arg)
PREDICATE(instr)
PREDICATE(va_list)
PREDICATE(type)
GROUP_END(va_arg)

GROUP_BEGIN(call)
PREDICATE(instr)
PREDICATE(instr_direct)
PREDICATE(instr_indirect)
PREDICATE(function)
PREDICATE(arg)
PREDICATE(calling_conv)
PREDICATE(ret_attr)
PREDICATE(param_attr)
PREDICATE(fn_attr)
PREDICATE(tail)
GROUP_END(call)

GROUP_BEGIN(landingpad)
PREDICATE(instr)
PREDICATE(type)
PREDICATE(catch_clause)
PREDICATE(filter_clause)
PREDICATE(nclauses)
PREDICATE(cleanup)
GROUP_END(landingpad)

// Types

GROUP_BEGIN(primitive_type)
PREDICATE(id)
GROUP_END(primitive_type)

GROUP_BEGIN(integer_type)
PREDICATE(id)
GROUP_END(integer_type)

GROUP_BEGIN(fp_type)
PREDICATE(id)
GROUP_END(fp_type)

GROUP_BEGIN(type)
PREDICATE(alloc_size)
PREDICATE(store_size)
GROUP_END(type)

GROUP_BEGIN(func_type)
PREDICATE(id)
PREDICATE(varargs)
PREDICATE(return_type)
PREDICATE(param_type)
PREDICATE(nparams)
GROUP_END(func_type)

GROUP_BEGIN(ptr_type)
PREDICATE(id)
PREDICATE(component_type)
PREDICATE(addr_space)
GROUP_END(ptr_type)

GROUP_BEGIN(vector_type)
PREDICATE(id)
PREDICATE(component_type)
PREDICATE(size)
GROUP_END(vector_type)

GROUP_BEGIN(array_type)
PREDICATE(id)
PREDICATE(component_type)
PREDICATE(size)
GROUP_END(array_type)

GROUP_BEGIN(struct_type)
PREDICATE(id)
PREDICATE(field_type)
PREDICATE(field_offset)
PREDICATE(field_bit_offset)
PREDICATE(nfields)
PREDICATE(opaque)
PREDICATE(has_name)
GROUP_END(struct_type)

// Variables and constants

GROUP_BEGIN(variable)
PREDICATE(id)
PREDICATE(type)
PREDICATE(source_name)
PREDICATE(pos)
PREDICATE(in_function)
PREDICATE(name)
GROUP_END(variable)

GROUP_BEGIN(constant)
PREDICATE(id)
PREDICATE(type)
PREDICATE(value)
PREDICATE(hash)
PREDICATE(expr)
PREDICATE(to_integer)
PREDICATE(in_function)
GROUP_END(constant)

// Constant hierarchy

GROUP_BEGIN(integer_constant)
PREDICATE(id)
GROUP_END(integer_constant)

GROUP_BEGIN(fp_constant)
PREDICATE(id)
GROUP_END(fp_constant)

GROUP_BEGIN(nullptr_constant)
PREDICATE(id)
GROUP_END(nullptr_constant)

GROUP_BEGIN(function_constant)
PREDICATE(id)
PREDICATE(name)
GROUP_END(function_constant)

GROUP_BEGIN(global_variable_constant)
PREDICATE(id)
PREDICATE(name)
GROUP_END(global_variable_constant)

GROUP_BEGIN(constant_array)
PREDICATE(id)
PREDICATE(index)
PREDICATE(size)
GROUP_END(constant_array)

GROUP_BEGIN(constant_struct)
PREDICATE(id)
PREDICATE(index)
PREDICATE(size)
GROUP_END(constant_struct)

GROUP_BEGIN(constant_vector)
PREDICATE(id)
PREDICATE(index)
PREDICATE(size)
GROUP_END(constant_vector)

GROUP_BEGIN(constant_expr)
PREDICATE(id)
GROUP_END(constant_expr)

GROUP_BEGIN(bitcast_constant_expr)
PREDICATE(id)
PREDICATE(from_constant)
GROUP_END(bitcast_constant_expr)

GROUP_BEGIN(inttoptr_constant_expr)
PREDICATE(id)
PREDICATE(from_int_constant)
GROUP_END(inttoptr_constant_expr)

GROUP_BEGIN(ptrtoint_constant_expr)
PREDICATE(id)
PREDICATE(from_ptr_constant)
GROUP_END(ptrtoint_constant_expr)

GROUP_BEGIN(gep_constant_expr)
PREDICATE(id)
PREDICATE(base)
PREDICATE(index)
PREDICATE(nindices)
GROUP_END(gep_constant_expr)

GROUP_BEGIN(undef_constant)
PREDICATE(id)
GROUP_END(undef_constant)

GROUP_BEGIN(poison_constant)
PREDICATE(id)
GROUP_END(poison_constant)

// Inline Assembly

GROUP_BEGIN(inline_asm)
PREDICATE(id)
PREDICATE(text)
PREDICATE(constraints)
GROUP_END(inline_asm)

// Function Attributes

GROUP_BEGIN(attribute)
PREDICATE(target_dependent)
GROUP_END(attribute)

// Signatures

GROUP_BEGIN(signature)
PREDICATE(pts_none)
PREDICATE(pts_return_alloc)
PREDICATE(pts_return_alloc_once)
PREDICATE(pts_return_aliases_arg)
PREDICATE(pts_return_aliases_arg_reachable)
PREDICATE(pts_return_points_to_global)
PREDICATE(pts_return_aliases_global)
PREDICATE(pts_return_aliases_global_reachable)
PREDICATE(pts_arg_alloc)
PREDICATE(pts_arg_alloc_once)
PREDICATE(pts_arg_memcpy_arg)
PREDICATE(pts_arg_memcpy_arg_reachable)
PREDICATE(pts_arg_points_to_global)
PREDICATE(pts_arg_memcpy_global)
PREDICATE(pts_arg_memcpy_global_reachable)
PREDICATE(pts_global_memcpy_arg)
PREDICATE(pts_global_memcpy_arg_reachable)
GROUP_END(signature)

// User options
GROUP_BEGIN(user)
PREDICATE(options)
GROUP_END(user)