[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a]
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a][0]
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call][0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a]
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call][0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a][0]
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call][0]	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call][0]	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b]
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b][0]
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call][0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b]
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call][0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b][0]
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call][0]	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call][0]	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0]	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0]	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0].?/0	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0].?/0	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %a][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0].?/0	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0].?/0	[<points-to_malloc-context.c>:fun1:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0]	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0]	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0].?/0	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0].?/0	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %b][0]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0].?/0	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr]
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0].?/0	[<points-to_malloc-context.c>:fun2:2, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
nil	*global_alloc@global_obj	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %c]
nil	*global_alloc@global_obj	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %c][0]
nil	*global_alloc@global_obj	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %d]
nil	*global_alloc@global_obj	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %d][0]
nil	*global_alloc@global_obj	[<points-to_malloc-context.c>:fun3:0, nil]	*stack_alloc@id[%struct.obj** %x.addr]
nil	*global_alloc@global_obj	[<points-to_malloc-context.c>:fun3:0, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
nil	*global_alloc@global_obj	[<points-to_malloc-context.c>:fun4:0, nil]	*stack_alloc@id[%struct.obj** %x.addr]
nil	*global_alloc@global_obj	[<points-to_malloc-context.c>:fun4:0, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
nil	*global_alloc@global_obj[0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %c]
nil	*global_alloc@global_obj[0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %c][0]
nil	*global_alloc@global_obj[0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %d]
nil	*global_alloc@global_obj[0]	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %d][0]
nil	*global_alloc@global_obj[0]	[<points-to_malloc-context.c>:fun3:0, nil]	*stack_alloc@id[%struct.obj** %x.addr]
nil	*global_alloc@global_obj[0]	[<points-to_malloc-context.c>:fun3:0, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
nil	*global_alloc@global_obj[0]	[<points-to_malloc-context.c>:fun4:0, nil]	*stack_alloc@id[%struct.obj** %x.addr]
nil	*global_alloc@global_obj[0]	[<points-to_malloc-context.c>:fun4:0, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
nil	*global_alloc@global_obj[0].?/0	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %c]
nil	*global_alloc@global_obj[0].?/0	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %c][0]
nil	*global_alloc@global_obj[0].?/0	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %d]
nil	*global_alloc@global_obj[0].?/0	[<<main-context>>, nil]	*stack_alloc@main[%struct.obj** %d][0]
nil	*global_alloc@global_obj[0].?/0	[<points-to_malloc-context.c>:fun3:0, nil]	*stack_alloc@id[%struct.obj** %x.addr]
nil	*global_alloc@global_obj[0].?/0	[<points-to_malloc-context.c>:fun3:0, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
nil	*global_alloc@global_obj[0].?/0	[<points-to_malloc-context.c>:fun4:0, nil]	*stack_alloc@id[%struct.obj** %x.addr]
nil	*global_alloc@global_obj[0].?/0	[<points-to_malloc-context.c>:fun4:0, nil]	*stack_alloc@id[%struct.obj** %x.addr][0]
nil	*unknown*	nil	*unknown*
