[<<main-context>>, nil]	*heap_alloc@main[i8* %call2]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%10
[<<main-context>>, nil]	*heap_alloc@main[i8* %call2]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%7
[<<main-context>>, nil]	*heap_alloc@main[i8* %call2]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call2
[<<main-context>>, nil]	*heap_alloc@main[i8* %call2]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*heap_alloc@main[i8* %call2]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*heap_alloc@main[i8* %call2][0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%10
[<<main-context>>, nil]	*heap_alloc@main[i8* %call2][0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%7
[<<main-context>>, nil]	*heap_alloc@main[i8* %call2][0]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*heap_alloc@main[i8* %call2][0]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*heap_alloc@main[i8* %call2][4]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*heap_alloc@main[i8* %call3]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%4
[<<main-context>>, nil]	*heap_alloc@main[i8* %call3]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call3
[<<main-context>>, nil]	*heap_alloc@main[i8* %call3]	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*heap_alloc@main[i8* %call3]	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*heap_alloc@main[i8* %call3][4]	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*heap_alloc@main[i8* %call4]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%5
[<<main-context>>, nil]	*heap_alloc@main[i8* %call4]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call4
[<<main-context>>, nil]	*heap_alloc@main[i8* %call4]	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*heap_alloc@main[i8* %call4]	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*heap_alloc@main[i8* %call4][4]	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*heap_alloc@main[i8* %call7]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%6
[<<main-context>>, nil]	*heap_alloc@main[i8* %call7]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call7
[<<main-context>>, nil]	*heap_alloc@main[i8* %call7]	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*heap_alloc@main[i8* %call7]	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*heap_alloc@main[i8* %call7][4]	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%1
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%arraydecay8
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%large_const_size_stack
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack]	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack]	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack][0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%arraydecay8
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack][0]	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack][0]	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack][0][*]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%arraydecay8
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack][0][*]	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack][0][*]	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*stack_alloc@main[[128 x i32]* %large_const_size_stack][0][*]	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%0
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%arraydecay
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%small_const_size_stack
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack]	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack]	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack][0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%arraydecay
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack][0]	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack][0]	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack][0][*]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%arraydecay
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack][0][*]	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack][0][*]	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*stack_alloc@main[[8 x i32]* %small_const_size_stack][0][*]	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*stack_alloc@main[i32* %vla]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%vla
[<<main-context>>, nil]	*stack_alloc@main[i32* %vla]	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*stack_alloc@main[i32* %vla]	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*stack_alloc@main[i32* %vla][1]	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call3]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%4
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call3]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call3
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call3]	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call3]	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call3][1]	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call4]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%5
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call4]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call4
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call4]	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call4]	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call4][1]	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call7]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%6
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call7]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call7
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call7]	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call7]	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*typed_heap_alloc@main[i32* %call7][1]	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%10
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%7
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call2
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2][0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%10
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2][0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%7
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2][0]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2][0]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call2][4]	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call3]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%4
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call3]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call3
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call3]	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call3]	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call3][4]	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call4]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%5
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call4]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call4
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call4]	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call4]	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call4][4]	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call7]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%6
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call7]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%call7
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call7]	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call7]	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*typed_heap_alloc@main[i8* %call7][4]	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:%arrayidx
[<<main-context>>, nil]	*typed_stack_alloc@main[i8* %vla]	[<<main-context>>, nil]	<allocation-sizes.c>:main:%vla
[<<main-context>>, nil]	*typed_stack_alloc@main[i8* %vla]	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:%0
[<<main-context>>, nil]	*typed_stack_alloc@main[i8* %vla]	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:%buf
[<<main-context>>, nil]	*typed_stack_alloc@main[i8* %vla][4]	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:%arrayidx
nil	*global_alloc@.str	[<<main-context>>, nil]	<allocation-sizes.c>:main:2:2:@.str
nil	*global_alloc@.str[0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:2:1:getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)
nil	*global_alloc@.str[0][*]	[<<main-context>>, nil]	<allocation-sizes.c>:main:2:1:getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)
nil	*global_alloc@dynamic_size_global	[<<main-context>>, nil]	<allocation-sizes.c>:main:10:0:bitcast (i32** @dynamic_size_global to i8**)
nil	*global_alloc@dynamic_size_global	[<<main-context>>, nil]	<allocation-sizes.c>:main:10:1:@dynamic_size_global
nil	*global_alloc@dynamic_size_global	[<<main-context>>, nil]	<allocation-sizes.c>:main:33:0:@dynamic_size_global
nil	*global_alloc@dynamic_size_global	[<<main-context>>, nil]	<allocation-sizes.c>:main:46:0:@dynamic_size_global
nil	*global_alloc@getenv	[<<main-context>>, nil]	<allocation-sizes.c>:main:2:0:@getenv
nil	*global_alloc@large_const_size_global	[<<main-context>>, nil]	<allocation-sizes.c>:main:32:2:@large_const_size_global
nil	*global_alloc@large_const_size_global	[<<main-context>>, nil]	<allocation-sizes.c>:main:44:1:@large_const_size_global
nil	*global_alloc@large_const_size_global[0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:32:1:getelementptr inbounds ([128 x i32], [128 x i32]* @large_const_size_global, i64 0, i64 0)
nil	*global_alloc@large_const_size_global[0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:44:0:getelementptr inbounds ([128 x i32], [128 x i32]* @large_const_size_global, i64 0, i64 0)
nil	*global_alloc@large_const_size_global[0]	[<allocation-sizes.c>:main:32, nil]	<allocation-sizes.c>:set:%0
nil	*global_alloc@large_const_size_global[0]	[<allocation-sizes.c>:main:32, nil]	<allocation-sizes.c>:set:%buf
nil	*global_alloc@large_const_size_global[0][*]	[<<main-context>>, nil]	<allocation-sizes.c>:main:32:1:getelementptr inbounds ([128 x i32], [128 x i32]* @large_const_size_global, i64 0, i64 0)
nil	*global_alloc@large_const_size_global[0][*]	[<<main-context>>, nil]	<allocation-sizes.c>:main:44:0:getelementptr inbounds ([128 x i32], [128 x i32]* @large_const_size_global, i64 0, i64 0)
nil	*global_alloc@large_const_size_global[0][*]	[<allocation-sizes.c>:main:32, nil]	<allocation-sizes.c>:set:%0
nil	*global_alloc@large_const_size_global[0][*]	[<allocation-sizes.c>:main:32, nil]	<allocation-sizes.c>:set:%arrayidx
nil	*global_alloc@large_const_size_global[0][*]	[<allocation-sizes.c>:main:32, nil]	<allocation-sizes.c>:set:%buf
nil	*global_alloc@llvm.dbg.declare	[<<main-context>>, nil]	<allocation-sizes.c>:main:13:0:@llvm.dbg.declare
nil	*global_alloc@llvm.dbg.declare	[<<main-context>>, nil]	<allocation-sizes.c>:main:16:0:@llvm.dbg.declare
nil	*global_alloc@llvm.dbg.declare	[<<main-context>>, nil]	<allocation-sizes.c>:main:21:0:@llvm.dbg.declare
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<allocation-sizes.c>:main:20:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<allocation-sizes.c>:main:24:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<allocation-sizes.c>:main:27:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<allocation-sizes.c>:main:30:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<allocation-sizes.c>:main:3:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<allocation-sizes.c>:main:6:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:31, nil]	<allocation-sizes.c>:set:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:31, nil]	<allocation-sizes.c>:set:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:32, nil]	<allocation-sizes.c>:set:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:32, nil]	<allocation-sizes.c>:set:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.lifetime.end.p0i8	[<<main-context>>, nil]	<allocation-sizes.c>:main:62:0:@llvm.lifetime.end.p0i8
nil	*global_alloc@llvm.lifetime.end.p0i8	[<<main-context>>, nil]	<allocation-sizes.c>:main:63:0:@llvm.lifetime.end.p0i8
nil	*global_alloc@llvm.lifetime.start.p0i8	[<<main-context>>, nil]	<allocation-sizes.c>:main:12:0:@llvm.lifetime.start.p0i8
nil	*global_alloc@llvm.lifetime.start.p0i8	[<<main-context>>, nil]	<allocation-sizes.c>:main:15:0:@llvm.lifetime.start.p0i8
nil	*global_alloc@llvm.memset.p0i8.i64	[<allocation-sizes.c>:main:31, nil]	<allocation-sizes.c>:set:6:0:@llvm.memset.p0i8.i64
nil	*global_alloc@llvm.memset.p0i8.i64	[<allocation-sizes.c>:main:32, nil]	<allocation-sizes.c>:set:6:0:@llvm.memset.p0i8.i64
nil	*global_alloc@llvm.memset.p0i8.i64	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:6:0:@llvm.memset.p0i8.i64
nil	*global_alloc@llvm.memset.p0i8.i64	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:6:0:@llvm.memset.p0i8.i64
nil	*global_alloc@llvm.memset.p0i8.i64	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:6:0:@llvm.memset.p0i8.i64
nil	*global_alloc@llvm.memset.p0i8.i64	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:6:0:@llvm.memset.p0i8.i64
nil	*global_alloc@llvm.memset.p0i8.i64	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:6:0:@llvm.memset.p0i8.i64
nil	*global_alloc@llvm.memset.p0i8.i64	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:6:0:@llvm.memset.p0i8.i64
nil	*global_alloc@llvm.memset.p0i8.i64	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:6:0:@llvm.memset.p0i8.i64
nil	*global_alloc@llvm.stackrestore	[<<main-context>>, nil]	<allocation-sizes.c>:main:61:0:@llvm.stackrestore
nil	*global_alloc@llvm.stacksave	[<<main-context>>, nil]	<allocation-sizes.c>:main:18:0:@llvm.stacksave
nil	*global_alloc@malloc	[<<main-context>>, nil]	<allocation-sizes.c>:main:22:0:@malloc
nil	*global_alloc@malloc	[<<main-context>>, nil]	<allocation-sizes.c>:main:25:0:@malloc
nil	*global_alloc@malloc	[<<main-context>>, nil]	<allocation-sizes.c>:main:28:0:@malloc
nil	*global_alloc@malloc	[<<main-context>>, nil]	<allocation-sizes.c>:main:9:0:@malloc
nil	*global_alloc@rand	[<allocation-sizes.c>:main:31, nil]	<allocation-sizes.c>:set:3:0:@rand
nil	*global_alloc@rand	[<allocation-sizes.c>:main:32, nil]	<allocation-sizes.c>:set:3:0:@rand
nil	*global_alloc@rand	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:3:0:@rand
nil	*global_alloc@rand	[<allocation-sizes.c>:main:36, nil]	<allocation-sizes.c>:set:3:0:@rand
nil	*global_alloc@rand	[<allocation-sizes.c>:main:38, nil]	<allocation-sizes.c>:set:3:0:@rand
nil	*global_alloc@rand	[<allocation-sizes.c>:main:39, nil]	<allocation-sizes.c>:set:3:0:@rand
nil	*global_alloc@rand	[<allocation-sizes.c>:main:40, nil]	<allocation-sizes.c>:set:3:0:@rand
nil	*global_alloc@rand	[<allocation-sizes.c>:main:41, nil]	<allocation-sizes.c>:set:3:0:@rand
nil	*global_alloc@rand	[<allocation-sizes.c>:main:42, nil]	<allocation-sizes.c>:set:3:0:@rand
nil	*global_alloc@set	[<<main-context>>, nil]	<allocation-sizes.c>:main:31:0:@set
nil	*global_alloc@set	[<<main-context>>, nil]	<allocation-sizes.c>:main:32:0:@set
nil	*global_alloc@set	[<<main-context>>, nil]	<allocation-sizes.c>:main:34:0:@set
nil	*global_alloc@set	[<<main-context>>, nil]	<allocation-sizes.c>:main:36:0:@set
nil	*global_alloc@set	[<<main-context>>, nil]	<allocation-sizes.c>:main:38:0:@set
nil	*global_alloc@set	[<<main-context>>, nil]	<allocation-sizes.c>:main:39:0:@set
nil	*global_alloc@set	[<<main-context>>, nil]	<allocation-sizes.c>:main:40:0:@set
nil	*global_alloc@set	[<<main-context>>, nil]	<allocation-sizes.c>:main:41:0:@set
nil	*global_alloc@set	[<<main-context>>, nil]	<allocation-sizes.c>:main:42:0:@set
nil	*global_alloc@small_const_size_global	[<<main-context>>, nil]	<allocation-sizes.c>:main:31:2:@small_const_size_global
nil	*global_alloc@small_const_size_global	[<<main-context>>, nil]	<allocation-sizes.c>:main:43:1:@small_const_size_global
nil	*global_alloc@small_const_size_global[0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:31:1:getelementptr inbounds ([8 x i32], [8 x i32]* @small_const_size_global, i64 0, i64 0)
nil	*global_alloc@small_const_size_global[0]	[<<main-context>>, nil]	<allocation-sizes.c>:main:43:0:getelementptr inbounds ([8 x i32], [8 x i32]* @small_const_size_global, i64 0, i64 0)
nil	*global_alloc@small_const_size_global[0]	[<allocation-sizes.c>:main:31, nil]	<allocation-sizes.c>:set:%0
nil	*global_alloc@small_const_size_global[0]	[<allocation-sizes.c>:main:31, nil]	<allocation-sizes.c>:set:%buf
nil	*global_alloc@small_const_size_global[0][*]	[<<main-context>>, nil]	<allocation-sizes.c>:main:31:1:getelementptr inbounds ([8 x i32], [8 x i32]* @small_const_size_global, i64 0, i64 0)
nil	*global_alloc@small_const_size_global[0][*]	[<<main-context>>, nil]	<allocation-sizes.c>:main:43:0:getelementptr inbounds ([8 x i32], [8 x i32]* @small_const_size_global, i64 0, i64 0)
nil	*global_alloc@small_const_size_global[0][*]	[<allocation-sizes.c>:main:31, nil]	<allocation-sizes.c>:set:%0
nil	*global_alloc@small_const_size_global[0][*]	[<allocation-sizes.c>:main:31, nil]	<allocation-sizes.c>:set:%arrayidx
nil	*global_alloc@small_const_size_global[0][*]	[<allocation-sizes.c>:main:31, nil]	<allocation-sizes.c>:set:%buf
nil	*global_alloc@strtol	[<<main-context>>, nil]	<allocation-sizes.c>:main:4:0:@strtol
nil	*null*	[<<main-context>>, nil]	<allocation-sizes.c>:main:%10
nil	*null*	[<<main-context>>, nil]	<allocation-sizes.c>:main:%7
nil	*null*	[<<main-context>>, nil]	<allocation-sizes.c>:main:4:1:null
nil	*null*	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%0
nil	*null*	[<allocation-sizes.c>:main:34, nil]	<allocation-sizes.c>:set:%buf
