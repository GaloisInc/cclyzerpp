*argv-alloc[*]	8
*argv-alloc[0]	8
*argv[0]-alloc[*]	8
*argv[0]-alloc[0]	8
*global_alloc@.str	4
*global_alloc@.str.1	4
*global_alloc@.str.1[*]	4
*global_alloc@.str.1[*][*]	1
*global_alloc@.str.1[0]	4
*global_alloc@.str.1[0][*]	1
*global_alloc@.str[*]	4
*global_alloc@.str[*][*]	1
*global_alloc@.str[0]	4
*global_alloc@.str[0][*]	1
*heap_alloc@my_calloc[i8* %call][*]	1
*heap_alloc@my_calloc[i8* %call][0]	1
*stack_alloc@use_double[double* %x]	8
*stack_alloc@use_double[double* %x][*]	8
*stack_alloc@use_double[double* %x][0]	8
*stack_alloc@use_int[i32* %x]	4
*stack_alloc@use_int[i32* %x][*]	4
*stack_alloc@use_int[i32* %x][0]	4
*typed_heap_alloc@my_calloc[%struct.double_struct* %call][*]	8
*typed_heap_alloc@my_calloc[%struct.double_struct* %call][*].?/0	8
*typed_heap_alloc@my_calloc[%struct.double_struct* %call][0]	8
*typed_heap_alloc@my_calloc[%struct.double_struct* %call][0].?/0	8
*typed_heap_alloc@my_calloc[%struct.int_struct* %call][*]	8
*typed_heap_alloc@my_calloc[%struct.int_struct* %call][*].?/0	8
*typed_heap_alloc@my_calloc[%struct.int_struct* %call][0]	8
*typed_heap_alloc@my_calloc[%struct.int_struct* %call][0].?/0	8
*typed_heap_alloc@my_calloc[double** %call][*]	8
*typed_heap_alloc@my_calloc[double** %call][0]	8
*typed_heap_alloc@my_calloc[i32** %call][*]	8
*typed_heap_alloc@my_calloc[i32** %call][0]	8
*typed_stack_alloc@use_int[i8* %x]	4
*typed_stack_alloc@use_int[i8* %x][*]	1
*typed_stack_alloc@use_int[i8* %x][0]	1
