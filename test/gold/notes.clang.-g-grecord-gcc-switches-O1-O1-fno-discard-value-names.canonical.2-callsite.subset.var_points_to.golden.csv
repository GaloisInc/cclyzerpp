[<<main-context>>, nil]	*stack_alloc@main[%struct.sockaddr_in* %sa]	[<<main-context>>, nil]	<notes.c>:main:%0
[<<main-context>>, nil]	*stack_alloc@main[%struct.sockaddr_in* %sa]	[<<main-context>>, nil]	<notes.c>:main:%1
[<<main-context>>, nil]	*stack_alloc@main[%struct.sockaddr_in* %sa]	[<<main-context>>, nil]	<notes.c>:main:%sa
[<<main-context>>, nil]	*stack_alloc@main[%struct.sockaddr_in* %sa]	[<<main-context>>, nil]	<notes.c>:main:%sin_family
[<<main-context>>, nil]	*stack_alloc@main[%struct.sockaddr_in* %sa][0]	[<<main-context>>, nil]	<notes.c>:main:%sin_family
[<<main-context>>, nil]	*stack_alloc@main[%struct.sockaddr_in* %sa][0].?/0	[<<main-context>>, nil]	<notes.c>:main:%sin_family
[<<main-context>>, nil]	*stack_alloc@main[%struct.sockaddr_in* %sa][0].?/1	[<<main-context>>, nil]	<notes.c>:main:%sin_port
[<<main-context>>, nil]	*stack_alloc@main[%struct.sockaddr_in* %sa][0].?/2	[<<main-context>>, nil]	<notes.c>:main:%s_addr
[<<main-context>>, nil]	*stack_alloc@main[%struct.sockaddr_in* %sa][0].?/2.?/0	[<<main-context>>, nil]	<notes.c>:main:%s_addr
nil	*global_alloc@.str	[<notes.c>:cmd_read:5, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str	[<notes.c>:cmd_write:4, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str	nil	<notes.c>:cmd_read:%0
nil	*global_alloc@.str	nil	<notes.c>:cmd_write:%0
nil	*global_alloc@.str.16[0]	[<notes.c>:cmd_write:9, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str.16[0][*]	[<notes.c>:cmd_write:9, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str.23[0]	[<notes.c>:cmd_read:11, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str.23[0][*]	[<notes.c>:cmd_read:11, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str.3[0]	[<notes.c>:handle:9, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str.3[0][*]	[<notes.c>:handle:9, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str.4[0]	[<notes.c>:handle:25, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str.4[0][*]	[<notes.c>:handle:25, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str[0]	[<notes.c>:cmd_read:5, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str[0]	[<notes.c>:cmd_write:4, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str[0]	nil	<notes.c>:cmd_read:%0
nil	*global_alloc@.str[0]	nil	<notes.c>:cmd_write:%0
nil	*global_alloc@.str[0][*]	[<notes.c>:cmd_read:5, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str[0][*]	[<notes.c>:cmd_write:4, nil]	<notes.c>:notes_strdup:%s
nil	*global_alloc@.str[0][*]	nil	<notes.c>:cmd_read:%0
nil	*global_alloc@.str[0][*]	nil	<notes.c>:cmd_write:%0
nil	*global_alloc@hex_str.hex_digits[*]	nil	<notes.c>:hex_str:%arrayidx16
nil	*global_alloc@hex_str.hex_digits[*]	nil	<notes.c>:hex_str:%arrayidx9
nil	*global_alloc@hex_str.hex_digits[0][*]	nil	<notes.c>:hex_str:%arrayidx16
nil	*global_alloc@hex_str.hex_digits[0][*]	nil	<notes.c>:hex_str:%arrayidx9
nil	*heap_alloc@hex_str[i8* %call]	nil	<notes.c>:cmd_write:%call6
nil	*heap_alloc@hex_str[i8* %call]	nil	<notes.c>:cmd_write:%retval.1
nil	*heap_alloc@hex_str[i8* %call]	nil	<notes.c>:handle:%call5
nil	*heap_alloc@hex_str[i8* %call]	nil	<notes.c>:handle:%resp.0
nil	*heap_alloc@hex_str[i8* %call]	nil	<notes.c>:handle:%retval.0
nil	*heap_alloc@hex_str[i8* %call]	nil	<notes.c>:handle_loop:%call18
nil	*heap_alloc@hex_str[i8* %call]	nil	<notes.c>:hex_str:%call
nil	*heap_alloc@hex_str[i8* %call]	nil	<notes.c>:key:%call11
nil	*heap_alloc@hex_str[i8* %call]	nil	<notes.c>:key:%retval.3
nil	*heap_alloc@hex_str[i8* %call][*]	nil	<notes.c>:hex_str:%arrayidx11
nil	*heap_alloc@hex_str[i8* %call][*]	nil	<notes.c>:hex_str:%arrayidx19
nil	*heap_alloc@hex_str[i8* %call][64]	nil	<notes.c>:hex_str:%arrayidx21
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:handle:%3
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:handle:%c
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:handle:%call
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:new_cmd:%0
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:new_cmd:%c1
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:new_cmd:%call
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:notes_malloc:%call
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%0
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%c
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%c12
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%c17
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%call4
nil	*heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%retval.0
nil	*heap_alloc@notes_malloc[i8* %call][0]	nil	<notes.c>:handle:%c
nil	*heap_alloc@notes_malloc[i8* %call][0]	nil	<notes.c>:parse:%c
nil	*heap_alloc@notes_malloc[i8* %call][0]	nil	<notes.c>:parse:%c12
nil	*heap_alloc@notes_malloc[i8* %call][0]	nil	<notes.c>:parse:%c17
nil	*heap_alloc@notes_malloc[i8* %call][8]	nil	<notes.c>:new_cmd:%1
nil	*heap_alloc@notes_malloc[i8* %call][8]	nil	<notes.c>:new_cmd:%arg2
nil	*null*	nil	<notes.c>:cmd_write:%call6
nil	*null*	nil	<notes.c>:cmd_write:%retval.1
nil	*null*	nil	<notes.c>:handle:%3
nil	*null*	nil	<notes.c>:handle:%c
nil	*null*	nil	<notes.c>:handle:%call
nil	*null*	nil	<notes.c>:handle:%call5
nil	*null*	nil	<notes.c>:handle:%resp.0
nil	*null*	nil	<notes.c>:handle:%retval.0
nil	*null*	nil	<notes.c>:handle_loop:%call18
nil	*null*	nil	<notes.c>:key:%retval.3
nil	*null*	nil	<notes.c>:new_cmd:%arg
nil	*null*	nil	<notes.c>:parse:%arg.0
nil	*null*	nil	<notes.c>:parse:%retval.0
nil	*stack_alloc@cmd_read[[1024 x i8]* %data]	[<notes.c>:cmd_read:18, nil]	<notes.c>:notes_strdup:%s
nil	*stack_alloc@cmd_read[[1024 x i8]* %data]	nil	<notes.c>:cmd_read:%1
nil	*stack_alloc@cmd_read[[1024 x i8]* %data]	nil	<notes.c>:cmd_read:%data
nil	*stack_alloc@cmd_read[[1024 x i8]* %data][0]	[<notes.c>:cmd_read:18, nil]	<notes.c>:notes_strdup:%s
nil	*stack_alloc@cmd_read[[1024 x i8]* %data][0]	nil	<notes.c>:cmd_read:%1
nil	*stack_alloc@cmd_read[[1024 x i8]* %data][0][*]	[<notes.c>:cmd_read:18, nil]	<notes.c>:notes_strdup:%s
nil	*stack_alloc@cmd_read[[1024 x i8]* %data][0][*]	nil	<notes.c>:cmd_read:%1
nil	*stack_alloc@handle_loop[[1024 x i8]* %req]	nil	<notes.c>:handle:%req
nil	*stack_alloc@handle_loop[[1024 x i8]* %req]	nil	<notes.c>:handle_loop:%0
nil	*stack_alloc@handle_loop[[1024 x i8]* %req]	nil	<notes.c>:handle_loop:%req
nil	*stack_alloc@handle_loop[[1024 x i8]* %req]	nil	<notes.c>:parse:%req
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][*]	nil	<notes.c>:handle_loop:%arrayidx8
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][*]	nil	<notes.c>:handle_loop:%arrayidx9
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][0]	nil	<notes.c>:handle:%req
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][0]	nil	<notes.c>:handle_loop:%0
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][0]	nil	<notes.c>:parse:%req
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][0][*]	nil	<notes.c>:handle:%req
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][0][*]	nil	<notes.c>:handle_loop:%0
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][0][*]	nil	<notes.c>:handle_loop:%arrayidx8
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][0][*]	nil	<notes.c>:handle_loop:%arrayidx9
nil	*stack_alloc@handle_loop[[1024 x i8]* %req][0][*]	nil	<notes.c>:parse:%req
nil	*stack_alloc@key[[32 x i8]* %data]	nil	<notes.c>:hex_str:%in
nil	*stack_alloc@key[[32 x i8]* %data]	nil	<notes.c>:key:%0
nil	*stack_alloc@key[[32 x i8]* %data]	nil	<notes.c>:key:%data
nil	*stack_alloc@key[[32 x i8]* %data][*]	nil	<notes.c>:hex_str:%arrayidx
nil	*stack_alloc@key[[32 x i8]* %data][*]	nil	<notes.c>:key:%add.ptr
nil	*stack_alloc@key[[32 x i8]* %data][0]	nil	<notes.c>:hex_str:%in
nil	*stack_alloc@key[[32 x i8]* %data][0]	nil	<notes.c>:key:%0
nil	*stack_alloc@key[[32 x i8]* %data][0][*]	nil	<notes.c>:hex_str:%arrayidx
nil	*stack_alloc@key[[32 x i8]* %data][0][*]	nil	<notes.c>:hex_str:%in
nil	*stack_alloc@key[[32 x i8]* %data][0][*]	nil	<notes.c>:key:%0
nil	*stack_alloc@key[[32 x i8]* %data][0][*]	nil	<notes.c>:key:%add.ptr
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:handle:%3
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:handle:%c
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:handle:%call
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:new_cmd:%0
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:new_cmd:%c1
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:new_cmd:%call
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:notes_malloc:%call
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:parse:%0
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:parse:%c
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:parse:%c12
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:parse:%c17
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:parse:%call4
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call]	nil	<notes.c>:parse:%retval.0
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0]	nil	<notes.c>:handle:%c
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0]	nil	<notes.c>:parse:%c
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0]	nil	<notes.c>:parse:%c12
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0]	nil	<notes.c>:parse:%c17
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0].?/0	nil	<notes.c>:handle:%c
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0].?/0	nil	<notes.c>:parse:%c
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0].?/0	nil	<notes.c>:parse:%c12
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0].?/0	nil	<notes.c>:parse:%c17
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0].?/1	nil	<notes.c>:handle:%arg
nil	*typed_heap_alloc@notes_malloc[%struct.cmd* %call][0].?/1	nil	<notes.c>:handle:%arg7
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:handle:%3
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:handle:%c
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:handle:%call
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:new_cmd:%0
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:new_cmd:%c1
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:new_cmd:%call
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:notes_malloc:%call
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:parse:%0
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:parse:%c
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:parse:%c12
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:parse:%c17
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:parse:%call4
nil	*typed_heap_alloc@notes_malloc[i32* %call]	nil	<notes.c>:parse:%retval.0
nil	*typed_heap_alloc@notes_malloc[i32* %call][0]	nil	<notes.c>:handle:%c
nil	*typed_heap_alloc@notes_malloc[i32* %call][0]	nil	<notes.c>:parse:%c
nil	*typed_heap_alloc@notes_malloc[i32* %call][0]	nil	<notes.c>:parse:%c12
nil	*typed_heap_alloc@notes_malloc[i32* %call][0]	nil	<notes.c>:parse:%c17
nil	*typed_heap_alloc@notes_malloc[i32* %call][2]	nil	<notes.c>:new_cmd:%1
nil	*typed_heap_alloc@notes_malloc[i32* %call][2]	nil	<notes.c>:new_cmd:%arg2
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:handle:%3
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:handle:%c
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:handle:%call
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:new_cmd:%0
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:new_cmd:%c1
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:new_cmd:%call
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:notes_malloc:%call
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%0
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%c
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%c12
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%c17
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%call4
nil	*typed_heap_alloc@notes_malloc[i8* %call]	nil	<notes.c>:parse:%retval.0
nil	*typed_heap_alloc@notes_malloc[i8* %call][0]	nil	<notes.c>:handle:%c
nil	*typed_heap_alloc@notes_malloc[i8* %call][0]	nil	<notes.c>:parse:%c
nil	*typed_heap_alloc@notes_malloc[i8* %call][0]	nil	<notes.c>:parse:%c12
nil	*typed_heap_alloc@notes_malloc[i8* %call][0]	nil	<notes.c>:parse:%c17
nil	*typed_heap_alloc@notes_malloc[i8* %call][8]	nil	<notes.c>:new_cmd:%1
nil	*typed_heap_alloc@notes_malloc[i8* %call][8]	nil	<notes.c>:new_cmd:%arg2
