[<<main-context>>, nil]	*heap_alloc@main[i8* %call.i13]	*heap_alloc@main[i8* %call.i13]
[<<main-context>>, nil]	*heap_alloc@main[i8* %call.i13]	*heap_alloc@main[i8* %call.i13][0]
[<<main-context>>, nil]	*heap_alloc@main[i8* %call.i13][0]	*heap_alloc@main[i8* %call.i13]
[<<main-context>>, nil]	*heap_alloc@main[i8* %call.i13][0]	*heap_alloc@main[i8* %call.i13][0]
[<<main-context>>, nil]	*heap_alloc@main[i8* %call.i]	*heap_alloc@main[i8* %call.i]
[<<main-context>>, nil]	*heap_alloc@main[i8* %call.i]	*heap_alloc@main[i8* %call.i][0]
[<<main-context>>, nil]	*heap_alloc@main[i8* %call.i][0]	*heap_alloc@main[i8* %call.i]
[<<main-context>>, nil]	*heap_alloc@main[i8* %call.i][0]	*heap_alloc@main[i8* %call.i][0]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i13]	*typed_heap_alloc@main[%struct.obj* %call.i13]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i13]	*typed_heap_alloc@main[%struct.obj* %call.i13][0]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i13]	*typed_heap_alloc@main[%struct.obj* %call.i13][0].?/0
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i13][0]	*typed_heap_alloc@main[%struct.obj* %call.i13]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i13][0]	*typed_heap_alloc@main[%struct.obj* %call.i13][0]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i13][0]	*typed_heap_alloc@main[%struct.obj* %call.i13][0].?/0
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i13][0].?/0	*typed_heap_alloc@main[%struct.obj* %call.i13]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i13][0].?/0	*typed_heap_alloc@main[%struct.obj* %call.i13][0]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i13][0].?/0	*typed_heap_alloc@main[%struct.obj* %call.i13][0].?/0
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i]	*typed_heap_alloc@main[%struct.obj* %call.i]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i]	*typed_heap_alloc@main[%struct.obj* %call.i][0]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i]	*typed_heap_alloc@main[%struct.obj* %call.i][0].?/0
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i][0]	*typed_heap_alloc@main[%struct.obj* %call.i]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i][0]	*typed_heap_alloc@main[%struct.obj* %call.i][0]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i][0]	*typed_heap_alloc@main[%struct.obj* %call.i][0].?/0
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i][0].?/0	*typed_heap_alloc@main[%struct.obj* %call.i]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i][0].?/0	*typed_heap_alloc@main[%struct.obj* %call.i][0]
[<<main-context>>, nil]	*typed_heap_alloc@main[%struct.obj* %call.i][0].?/0	*typed_heap_alloc@main[%struct.obj* %call.i][0].?/0
nil	*global_alloc@_Znwm	*global_alloc@_Znwm
nil	*global_alloc@global_obj	*global_alloc@global_obj
nil	*global_alloc@global_obj	*global_alloc@global_obj[0].?/0
nil	*global_alloc@global_obj[0].?/0	*global_alloc@global_obj
nil	*global_alloc@global_obj[0].?/0	*global_alloc@global_obj[0].?/0
nil	*global_alloc@llvm.dbg.value	*global_alloc@llvm.dbg.value
