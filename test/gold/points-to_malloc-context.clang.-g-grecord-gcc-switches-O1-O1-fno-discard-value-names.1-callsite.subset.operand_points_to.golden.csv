[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun1:%0
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun1:%call
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun1:%call1
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%call
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field1
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call]	[<points-to_malloc-context.c>:fun1:2, nil]	<points-to_malloc-context.c>:id:%x
[<<main-context>>, nil]	*heap_alloc@fun1[i8* %call][0]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field1
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun2:%0
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun2:%call
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun2:%call1
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%call1
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field14
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call]	[<points-to_malloc-context.c>:fun2:2, nil]	<points-to_malloc-context.c>:id:%x
[<<main-context>>, nil]	*heap_alloc@fun2[i8* %call][0]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field14
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun1:%0
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun1:%call
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun1:%call1
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%call
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field1
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call]	[<points-to_malloc-context.c>:fun1:2, nil]	<points-to_malloc-context.c>:id:%x
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field1
[<<main-context>>, nil]	*typed_heap_alloc@fun1[%struct.obj* %call][0].?/0	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field1
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun2:%0
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun2:%call
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun2:%call1
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%call1
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field14
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call]	[<points-to_malloc-context.c>:fun2:2, nil]	<points-to_malloc-context.c>:id:%x
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field14
[<<main-context>>, nil]	*typed_heap_alloc@fun2[%struct.obj* %call][0].?/0	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field14
nil	*global_alloc@fun1	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:0:0:@fun1
nil	*global_alloc@fun2	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:2:0:@fun2
nil	*global_alloc@fun3	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:4:0:@fun3
nil	*global_alloc@fun4	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:6:0:@fun4
nil	*global_alloc@global_obj	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun3:%call
nil	*global_alloc@global_obj	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun3:0:1:@global_obj
nil	*global_alloc@global_obj	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun4:%call
nil	*global_alloc@global_obj	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun4:0:1:@global_obj
nil	*global_alloc@global_obj	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%call2
nil	*global_alloc@global_obj	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%call3
nil	*global_alloc@global_obj	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field15
nil	*global_alloc@global_obj	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field17
nil	*global_alloc@global_obj	[<points-to_malloc-context.c>:fun3:0, nil]	<points-to_malloc-context.c>:id:%x
nil	*global_alloc@global_obj	[<points-to_malloc-context.c>:fun4:0, nil]	<points-to_malloc-context.c>:id:%x
nil	*global_alloc@global_obj[0]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field15
nil	*global_alloc@global_obj[0]	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field17
nil	*global_alloc@global_obj[0].?/0	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field15
nil	*global_alloc@global_obj[0].?/0	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:%field17
nil	*global_alloc@id	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun1:2:0:@id
nil	*global_alloc@id	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun2:2:0:@id
nil	*global_alloc@id	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun3:0:0:@id
nil	*global_alloc@id	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun4:0:0:@id
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:1:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:3:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:5:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<<main-context>>, nil]	<points-to_malloc-context.c>:main:7:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<points-to_malloc-context.c>:fun1:2, nil]	<points-to_malloc-context.c>:id:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<points-to_malloc-context.c>:fun2:2, nil]	<points-to_malloc-context.c>:id:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<points-to_malloc-context.c>:fun3:0, nil]	<points-to_malloc-context.c>:id:0:0:@llvm.dbg.value
nil	*global_alloc@llvm.dbg.value	[<points-to_malloc-context.c>:fun4:0, nil]	<points-to_malloc-context.c>:id:0:0:@llvm.dbg.value
nil	*global_alloc@malloc	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun1:0:0:@malloc
nil	*global_alloc@malloc	[<<main-context>>, nil]	<points-to_malloc-context.c>:fun2:0:0:@malloc
