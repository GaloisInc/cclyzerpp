[<<main-context>>, nil]	*stack_alloc@main[[3 x void ()*]* %table]	[<<main-context>>, nil]	<functiontable.c>:main:%0
[<<main-context>>, nil]	*stack_alloc@main[[3 x void ()*]* %table]	[<<main-context>>, nil]	<functiontable.c>:main:%table
[<<main-context>>, nil]	*stack_alloc@main[[3 x void ()*]* %table][*]	[<<main-context>>, nil]	<functiontable.c>:main:%arrayidx
[<<main-context>>, nil]	*stack_alloc@main[[3 x void ()*]* %table][0][*]	[<<main-context>>, nil]	<functiontable.c>:main:%arrayidx
[<<main-context>>, nil]	*stack_alloc@main[i32* %argc.addr]	[<<main-context>>, nil]	<functiontable.c>:main:%argc.addr
[<<main-context>>, nil]	*stack_alloc@main[i32* %retval]	[<<main-context>>, nil]	<functiontable.c>:main:%retval
[<<main-context>>, nil]	*stack_alloc@main[i8*** %argv.addr]	[<<main-context>>, nil]	<functiontable.c>:main:%argv.addr
nil	*argv-alloc	[<<main-context>>, nil]	<functiontable.c>:main:%argv
nil	*global_alloc@.str	nil	<functiontable.c>:foo:0:2:@.str
nil	*global_alloc@.str.1	nil	<functiontable.c>:bar:0:2:@.str.1
nil	*global_alloc@.str.1[0]	nil	<functiontable.c>:bar:0:1:getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)
nil	*global_alloc@.str.1[0][*]	nil	<functiontable.c>:bar:0:1:getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)
nil	*global_alloc@.str.2	nil	<functiontable.c>:baz:0:2:@.str.2
nil	*global_alloc@.str.2[0]	nil	<functiontable.c>:baz:0:1:getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)
nil	*global_alloc@.str.2[0][*]	nil	<functiontable.c>:baz:0:1:getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)
nil	*global_alloc@.str[0]	nil	<functiontable.c>:foo:0:1:getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)
nil	*global_alloc@.str[0][*]	nil	<functiontable.c>:foo:0:1:getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)
nil	*global_alloc@__const.main.table	[<<main-context>>, nil]	<functiontable.c>:main:14:1:bitcast ([3 x void ()*]* @__const.main.table to i8*)
nil	*global_alloc@__const.main.table	[<<main-context>>, nil]	<functiontable.c>:main:14:2:@__const.main.table
nil	*global_alloc@bar	[<<main-context>>, nil]	<functiontable.c>:main:%1
nil	*global_alloc@baz	[<<main-context>>, nil]	<functiontable.c>:main:%1
nil	*global_alloc@foo	[<<main-context>>, nil]	<functiontable.c>:main:%1
nil	*global_alloc@llvm.dbg.declare	[<<main-context>>, nil]	<functiontable.c>:main:12:0:@llvm.dbg.declare
nil	*global_alloc@llvm.dbg.declare	[<<main-context>>, nil]	<functiontable.c>:main:6:0:@llvm.dbg.declare
nil	*global_alloc@llvm.dbg.declare	[<<main-context>>, nil]	<functiontable.c>:main:8:0:@llvm.dbg.declare
nil	*global_alloc@llvm.memcpy.p0i8.p0i8.i64	[<<main-context>>, nil]	<functiontable.c>:main:14:0:@llvm.memcpy.p0i8.p0i8.i64
nil	*global_alloc@printf	nil	<functiontable.c>:bar:0:0:@printf
nil	*global_alloc@printf	nil	<functiontable.c>:baz:0:0:@printf
nil	*global_alloc@printf	nil	<functiontable.c>:foo:0:0:@printf
nil	*global_alloc@rand	[<<main-context>>, nil]	<functiontable.c>:main:15:0:@rand
nil	*global_alloc@srand	[<<main-context>>, nil]	<functiontable.c>:main:11:0:@srand
nil	*global_alloc@time	[<<main-context>>, nil]	<functiontable.c>:main:9:0:@time
nil	*null*	[<<main-context>>, nil]	<functiontable.c>:main:9:1:null
