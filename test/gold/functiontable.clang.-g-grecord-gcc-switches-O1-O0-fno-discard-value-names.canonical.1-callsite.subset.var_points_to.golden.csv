[<<main-context>>, nil]	*stack_alloc@main[[3 x void ()*]* %table]	[<<main-context>>, nil]	<functiontable.c>:main:%0
[<<main-context>>, nil]	*stack_alloc@main[[3 x void ()*]* %table]	[<<main-context>>, nil]	<functiontable.c>:main:%table
[<<main-context>>, nil]	*stack_alloc@main[[3 x void ()*]* %table][*]	[<<main-context>>, nil]	<functiontable.c>:main:%arrayidx
[<<main-context>>, nil]	*stack_alloc@main[[3 x void ()*]* %table][0][*]	[<<main-context>>, nil]	<functiontable.c>:main:%arrayidx
[<<main-context>>, nil]	*stack_alloc@main[i32* %argc.addr]	[<<main-context>>, nil]	<functiontable.c>:main:%argc.addr
[<<main-context>>, nil]	*stack_alloc@main[i32* %retval]	[<<main-context>>, nil]	<functiontable.c>:main:%retval
[<<main-context>>, nil]	*stack_alloc@main[i8*** %argv.addr]	[<<main-context>>, nil]	<functiontable.c>:main:%argv.addr
nil	*argv-alloc	[<<main-context>>, nil]	<functiontable.c>:main:%argv
nil	*global_alloc@bar	[<<main-context>>, nil]	<functiontable.c>:main:%1
nil	*global_alloc@baz	[<<main-context>>, nil]	<functiontable.c>:main:%1
nil	*global_alloc@foo	[<<main-context>>, nil]	<functiontable.c>:main:%1
