[<<main-context>>, nil]	*stack_alloc@main[i32* %argc.addr]	[<<main-context>>, nil]	<recurse.c>:main:%argc.addr
[<<main-context>>, nil]	*stack_alloc@main[i32* %retval]	[<<main-context>>, nil]	<recurse.c>:main:%retval
[<<main-context>>, nil]	*stack_alloc@main[i8*** %argv.addr]	[<<main-context>>, nil]	<recurse.c>:main:%argv.addr
nil	*argv-alloc	[<<main-context>>, nil]	<recurse.c>:main:%argv
nil	*global_alloc@.str	nil	<recurse.c>:countdown:6:2:@.str
nil	*global_alloc@.str.1	nil	<recurse.c>:countdown:9:2:@.str.1
nil	*global_alloc@.str.1[0]	nil	<recurse.c>:countdown:9:1:getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)
nil	*global_alloc@.str.1[0][*]	nil	<recurse.c>:countdown:9:1:getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)
nil	*global_alloc@.str[0]	nil	<recurse.c>:countdown:6:1:getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)
nil	*global_alloc@.str[0][*]	nil	<recurse.c>:countdown:6:1:getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)
nil	*global_alloc@countdown	[<<main-context>>, nil]	<recurse.c>:main:8:0:@countdown
nil	*global_alloc@countdown	nil	<recurse.c>:countdown:12:0:@countdown
nil	*global_alloc@llvm.dbg.declare	[<<main-context>>, nil]	<recurse.c>:main:5:0:@llvm.dbg.declare
nil	*global_alloc@llvm.dbg.declare	[<<main-context>>, nil]	<recurse.c>:main:7:0:@llvm.dbg.declare
nil	*global_alloc@llvm.dbg.declare	nil	<recurse.c>:countdown:2:0:@llvm.dbg.declare
nil	*global_alloc@printf	nil	<recurse.c>:countdown:6:0:@printf
nil	*global_alloc@printf	nil	<recurse.c>:countdown:9:0:@printf
nil	*stack_alloc@countdown[i32* %x.addr]	nil	<recurse.c>:countdown:%x.addr
